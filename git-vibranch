#!/usr/bin/env bash

prompt() {
	local reply
	while read -rp "$*" reply; do
		case "$reply" in
		[yY]*) return ;;
		[nN]*) return 1 ;;
		*) ;;
		esac
	done
}

quiet=no
dryrun=no
doprompt=no

while getopts "diq" opt "$@"; do
	case "$opt" in
	q) quiet=yes ;;
	d) dryrun=yes ;;
	i) doprompt=yes ;;
	*) ;;
	esac
done

declare -a oldbranches
mapfile -t lines < <(git branch --list)
tmp="$(mktemp)"
counter=0

for line in "${lines[@]}"; do
	branch="${line//* /}"
	oldbranches+=("$branch")
	>>"$tmp" printf "%04d %s\n" "$counter" "${branch//* /}"
	let counter++
done

"${EDITOR:-vi}" "$tmp"

declare -a newbranches
mapfile -t lines <"$tmp"

for line in "${lines[@]}"; do
	read -r index newbranch <<<"$line"
	newbranches["$index"]="$newbranch"
done

for ((i=0; i<counter; i++)); do
	oldbranch="${oldbranches[i]}"
	newbranch="${newbranches[i]}"

	if [ -z "$newbranch" ]; then
		[ "$doprompt" = yes ] && prompt "Delete branch $oldbranch [y/n]? " || continue
		[ "$dryrun" = no ] && >/dev/null git branch -D "${oldbranches[i]}"
		[ "$quiet" = no ] && echo "Deleted branch $oldbranch"
	elif [ ! "$newbranch" = "$oldbranch" ]; then
		[ "$doprompt" = yes ] && prompt "Rename branch $oldbranch to $newbranch [y/n]? " || continue
		[ "$dryrun" = no ] && >/dev/null git branch -m "$oldbranch" "$newbranch"
		[ "$quiet" = no ] && echo "Renamed branch $oldbranch to $newbranch"
	fi
done

